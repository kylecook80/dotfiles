# Options
OPTION_PLUGINS="F"
OPTION_PROMPT="T"
OPTION_NEOFETCH="F"

# Configuration
ENABLE_PYENV="F"
ENABLE_CARGO="F"
ENABLE_NVM="F"
ENABLE_DIRENV="F"
ENABLE_GO="F"

# Configurations
CONFIG_TMUX="F"
CONFIG_ITERM2="F"

PYENV_ROOT="$HOME/.pyenv"
NVM_DIR="$HOME/.nvm"

# Add local path to custom themes and functions
fpath=(
    ~/.zsh/site-functions
    $fpath
)

# Standard emacs keymap
bindkey -e

if [[ ! -e $HOME/.znap/zsh-snap ]]; then
   mkdir -p $HOME/.znap
   git clone https://github.com/marlonrichert/zsh-snap $HOME/.znap/zsh-snap
fi

if [ "$OPTION_NEOFETCH" = "T" ]; then
    if hash "neofetch" 2> /dev/null; then
       neofetch
    fi
fi

if [ "$OPTION_PLUGINS" = "T" ]; then
    source $HOME/.znap/zsh-snap/znap.zsh

    znap source zsh-users/zsh-syntax-highlighting
fi

if [ "$OPTION_PROMPT" = "T" ]; then
    znap prompt cook
fi

if [ "$ENABLE_NVM" = "T" ]; then
    if [ ! -d "$HOME/.nvm" ]; then 
        git clone https://github.com/nvm-sh/nvm.git .nvm
        cd .nvm
        git checkout v0.39.7
        cd $HOME
    fi
    
    if ! hash "nvm" 2> /dev/null; then
        export NVM_DIR
        [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
    fi
fi

if [ "$ENABLE_PYENV" = "T" ]; then
    if [ ! -d "$HOME/.pyenv" ]; then
        git clone https://github.com/pyenv/pyenv.git $HOME/.pyenv
        git clone https://github.com/pyenv/pyenv-virtualenv.git $HOME/.pyenv/plugins/pyenv-virtualenv
        cd $HOME/.pyenv && src/configure && make -C src
        cd $HOME
    fi
    
    if hash "pyenv" 2> /dev/null; then
        export PYENV_ROOT
        export PATH="$PYENV_ROOT/bin:$PATH"
        eval "$(pyenv init -)"
        eval "$(pyenv virtualenv-init -)"
    fi
fi

if [ "$ENABLE_CARGO" = "T" ]; then
    if [ ! -d "$HOME/.cargo" ]; then
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
    fi

    if [ -e "$HOME/.cargo/env" ]; then
        source "$HOME/.cargo/env"
    fi
fi

if [ "$ENABLE_DIRENV" = "T" ]; then
    if hash "direnv" 2> /dev/null; then
        eval "$(direnv hook zsh)"
    fi
fi

if [ "$ENABLE_GO" = "T" ]; then
    if [ ! -d "$HOME/.go" ]; then
        cd $HOME
        wget https://go.dev/dl/go1.22.5.linux-amd64.tar.gz
        tar xfvz go1.22.5.linux-amd64.tar.gz
        mv go .go
        rm go1.22.5.linux-amd64.tar.gz
    fi

    if ! hash "go" 2> /dev/null; then
        export PATH="$HOME/.go/bin:$PATH"
    fi
fi

if [ "$CONFIG_TMUX" = "T" ]; then
    if [ ! -d "$HOME/.tmux/plugins/tpm" ]; then
        git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
    fi
fi

if [ "$CONFIG_ITERM2" = "T" ]; then
    test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"
fi

# vim: ai et nu ts=4 sw=4 sts=4 ft=sh :
