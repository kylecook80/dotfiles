#!/usr/bin/env bash

OS=`echo $(uname) | tr '[:upper:]' '[:lower:]'`
# DIR="$( cd "$( dirname "${BASH_SOURCE[1]}" )" && pwd )"
DIR="$HOME/.dotfiles"

ECHO="/bin/echo -n"

echo "OS: $OS"
echo "DIR: $DIR"

if [ "$OS" = "darwin" ]; then
    DEFAULT_FILES="aliases gitconfig gitignore templates vimrc zshenv zshrc zsh"
else
    DEFAULT_FILES="aliases gdbinit gitconfig gitignore screenrc vimrc zshenv zshrc zsh"
fi

DESKTOP_FILES="i3 polybar rofi xinitrc xmodmaprc Xresources Xresources.d"

install_dotfiles() {
    for item in $DEFAULT_FILES; do
        if [ -e "$item-$OS" ]; then
            set -- "$@" "$item-$OS"
        else
            set -- "$@" "$item"
        fi
    done

    regex=".*-$OS"
    for item do
        if echo "$item" | grep -q $regex; then
            file=$(echo "$item" | cut -d'-' -f1)
            $ECHO "Creating file .$file: "
            if [ ! -e "$HOME/.$file" ]; then
                cat "$file" "$item" > "$HOME/.$file"
                echo "Success"
            else
                echo "Already exists"
            fi
        else
            # echo "no_regex: %s\n" "$HOME/.$item"
            # ln -s ".dotfiles/$item" "$HOME/.$item"
            $ECHO "Linking file .$item: "
            if [ ! -e "$HOME/.$item" -a ! -L "$HOME/.$item" ]; then
                ln -sf "$DIR/$item" "$HOME/.$item"
                echo "Success"
            else
                echo "Already exists"
            fi
        fi
    done
}

install_scripts() {
    mkdir -p $HOME/bin
    for item in $DIR/scripts/*; do
        $ECHO "Installing $(basename $item): "
        if [ ! -L "$HOME/bin/$(basename $item)" ]; then
            ln -sf $item $HOME/bin
            echo "Success"
        else
            echo "Already exists"
        fi
    done
}

install_sublime_prefs() {
    $ECHO "Installing Sublime Text 3 Preferences: "

    SUBFILES=("$HOME/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings"
        "$HOME/Library/Application Support/Sublime Text 3/Packages/User/Package Control.sublime-settings")

    if [ "$OS" = "darwin" ]; then
        OP=""
        for ((i = 0; i < ${#SUBFILES[@]}; i++)); do
            FILE=${SUBFILES[$i]}
            NAME=$(basename "$FILE")

            if [ -L "$FILE" ]; then
                continue
            fi

            OP=0

            if [ -e "$FILE" ]; then
                mv "$HOME/Library/Application Support/Sublime Text 3/Packages/User/${NAME}" "${HOME}/Library/Application Support/Sublime Text 3/Packages/User/${NAME}.old"
            fi

            ln -s "$HOME/.dotfiles/${NAME}" "${HOME}/Library/Application Support/Sublime Text 3/Packages/User/${NAME}"
        done

        if [[ -z "$OP" ]]; then
            echo "Already exists. Skipping..."
        else
            echo "Success"
        fi
    else
        echo "Operating System not supported."
    fi
}

install_brew_apps() {
    if test ! $(which brew); then
        echo "Installing X Code CLI tools"
        xcode-select --install
        echo "Installing Homebrew..."
        ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
    fi

    # Make sure we’re using the latest Homebrew
    brew update

    # Upgrade any already-installed formulae
    brew upgrade

    apps=(
        ansible
        autojump
        binutils
        cmake
        conan
        coreutils
        curl
        curl-openssl
        dockutil
        findutils
        gcc
        gdb
        git
        gnupg
        ical-buddy
        iperf
        jq
        llvm
        mysql
        nasm
        neofetch
        nmap
        p7zip
        packer
        pandoc
        pandoc-citeproc
        pandoc-crossref
        percol
        postgresql
        python
        r
        ruby
        socat
        vim
        wget
        xz
        zsh
        zsh-autosuggestions
    )
    brew install "${apps[@]}"

    # Remove outdated versions from the cellar
    brew cleanup
}

install_brew_cask() {
    echo “Installing cask...”
    brew tap homebrew/cask
    brew tap homebrew/cask-fonts
    brew tap puppetlabs/puppet

    CASKS=(
        1password
        arq
        bartender
        bettertouchtool
        daisydisk
        discord
        fantastical
        firefox
        font-fira-code
        font-fira-mono
        font-fira-sans
        font-hack
        font-inconsolata
        forklift
        iterm2
        jetbrains-toolbox
        karabiner-elements
        latexit
        mactex
        menumeters
        microsoft-office
        mountain
        nextcloud
        osxfuse
        pdf-expert
        pdk
        royal-tsx
        scroll-reverser
        sdformatter
        signal
        skim
        slack
        sublime-merge
        sublime-text
        texstudio
        tunnelblick
        twitch
        ultimaker-cura
        vagrant
        vmware-fusion
        wireshark
        zotero
    )

    echo “Installing cask apps...”
    brew cask install ${CASKS[@]}
}

install_dotfiles
install_scripts

if [[ "$OS" == "darwin" && ! -e $HOME/.dotinstalled ]]; then
    touch $HOME/.dotinstalled
	install_brew_apps
	install_brew_cask
    install_sublime_prefs
fi

echo -n "Setting terminal theme: "
if [[ ! -L "$HOME/.base16_theme" ]]; then
    base_16_tomorrow-night
    echo "Done."
else
    echo "Already set."
fi

# Canary to tell if dotfiles is installed
if [[ ! -e "$HOME/.dotinstalled" ]]; then
    date > $HOME/.dotinstalled
fi
