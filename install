#!/bin/bash

if [[ -f "$HOME/.private" ]]; then . $HOME/.private; fi

OS=`echo $(uname) | tr '[:upper:]' '[:lower:]'`
# DIR="$( cd "$( dirname "${BASH_SOURCE[1]}" )" && pwd )"
DIR="$HOME/.dotfiles"

ECHO="/bin/echo -n"

echo "OS: $OS"
echo "DIR: $DIR"

if [ "$OS" = "darwin" ]; then
    DEFAULT_FILES="aliases gitconfig gitignore templates vimrc zshenv zshrc zsh"
else
    DEFAULT_FILES="aliases gdbinit gitconfig gitignore screenrc templates vimrc zshenv zshrc zsh"
fi

#DESKTOP_FILES="i3 polybar rofi xinitrc xmodmaprc Xresources Xresources.d"

install_dotfiles() {
    for item in $DEFAULT_FILES; do
        if [[ -e "$item-$OS" ]]; then
            set -- "$@" "$item-$OS"
        else
            set -- "$@" "$item"
        fi
    done

    regex=".*-$OS"
    for item do
        if echo "$item" | grep -q $regex; then
            file=$(echo "$item" | cut -d'-' -f1)
            $ECHO "Creating file .$file: "
            if [[ ! -e "$HOME/.$file" ]]; then
                cat "$file" "$item" | envsubst > "$HOME/.$file"
                echo "Success"
            else
                echo "Already exists"
            fi
        else
            # echo "no_regex: %s\n" "$HOME/.$item"
            # ln -s ".dotfiles/$item" "$HOME/.$item"
            $ECHO "Linking file .$item: "
            if [[ ! -e "$HOME/.$item" && ! -L "$HOME/.$item" ]]; then
                ln -sf "$DIR/$item" "$HOME/.$item"
                echo "Success"
            else
                echo "Already exists"
            fi
        fi
    done
}

install_scripts() {
    mkdir -p $HOME/bin
    regex=".*-gen\.sh"
    for item in $DIR/scripts/*; do
        if echo "$item" | grep -q $regex; then
            file="$(basename $(echo "$item" | cut -d'-' -f1)).sh"
            $ECHO "Generating script $file.sh: "
            if [[ ! -e "$HOME/bin/$file" ]]; then
                cat "$item" | envsubst > "$HOME/bin/$file"
                echo "Success"
            else
                echo "Already exists"
            fi
        else
            file="$(basename $item)"
            $ECHO "Installing $(basename $item): "
            if [[ ! -L "$HOME/bin/$file" ]]; then
                ln -sf $item $HOME/bin
                echo "Success"
            else
                echo "Already exists"
            fi
        fi
    done
}

install_dotfiles
install_scripts

# Canary to tell if dotfiles is installed
if [[ ! -e "$HOME/.dotinstalled" ]]; then
    date > $HOME/.dotinstalled
fi
