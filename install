#!/usr/bin/env bash

# Enable tracing
# set -x

# Enable Debug Mode
# DEBUG="T"

__dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
__file="${__dir}/$(basename "${BASH_SOURCE[0]}")"
__base="$(basename ${__file} .sh)"
__root="$(cd "$(dirname "${__dir}")" && pwd)"

__version="2.1.0"

source "scripts/lib/stdlib.sh"

help()
{
    echo -e "${__base} - Installation script for dotfiles"
    echo -e ""
    echo -e "Usage:"
    echo -e "\t${__base} [options]"
    echo -e ""
    echo -e "Options:"
    echo -e "\t-d | --desktop\t\tInstall desktop configuration files"
    echo -e "\t-f | --files\t\tInstall Extra files only"
    echo -e "\t-h | --help\t\tShow this screen"
    echo -e ""
}

OS=$(uname | tr '[:upper:]' '[:lower:]')
DIR="$( cd "$( dirname "${BASH_SOURCE[1]}" )" && pwd )"

debug "OS: $OS"
debug "DIR: $DIR"

if [[ "$OS" = "darwin" ]]; then
    if [ ! -d "/opt/homebrew" ]; then
        echo "Please install Homebrew first."
        exit 1
    fi

    if [ ! -x "/opt/homebrew/bin/gfind" ]; then
        brew install findutils
    fi

    if [ ! -x "/opt/homebrew/bin/gtr" ]; then
        brew install coreutils
    fi

    if [ ! -x "/opt/homebrew/bin/ggrep" ]; then
        brew install grep
    fi

    FIND="/opt/homebrew/bin/gfind"
    GREP="/opt/homebrew/bin/ggrep"
    TR="/opt/homebrew/bin/gtr"
else
    FIND="/usr/bin/find"
    GREP="/usr/bin/grep"
    TR="/usr/bin/tr"
fi

CORE_FILES="files/zsh files/zprofile files/zshenv files/zshrc"
DEFAULT_FILES=$($FIND files -mindepth 1 -maxdepth 1 -not -wholename files/z\* | $GREP -P '^(?!.*-gen).*$' | $TR '\n' ' ')

DEFAULT_SCRIPTS=$($FIND scripts -mindepth 1 -maxdepth 1 -printf "%p ")
DESKTOP_CONFIG=$($FIND desktop/config -mindepth 1 -maxdepth 1 -printf "%p ")
DESKTOP_FILES=$($FIND desktop -mindepth 1 -maxdepth 1 -path desktop/config -prune -o -printf "%p ")

debug "DEFAULT_FILES = ${DEFAULT_FILES}"
debug "GEN_FILES = ${GEN_FILES}"
debug "DEFAULT_SCRIPTS = ${DEFAULT_SCRIPTS}"
debug "DESKTOP_CONFIG = ${DESKTOP_CONFIG}"
debug "DESKTOP_FILES = ${DESKTOP_FILES}"

link_to() {
    local list=$1
    local dst=$2

    # If linking to home directory, make them hidden.
    # Also add a trailing slash if not present.
    if [[ "$dst" = "$HOME" ]]; then
        dst="$HOME/."
    else
        [[ "${dst}" != */ ]] && dst="${dst}/"
        [[ ! -d "${dst}" ]] && mkdir -p "${dst}"
    fi

    debug "list = $list"
    debug "dst = $dst"

    for item in $list; do
        local filename;
        filename=$(basename "$item")

        task "Linking $filename"

        if [[ ! -e "$dst$filename" ]]; then
            ln -sf "$DIR/$item" "$dst$filename"
            taskdone
        else
            taskdone "Already exists"
        fi
    done
}

copy_to() {
    local list=$1
    local dst=$2

    # If installing to home directory, make files hidden.
    # Also add a trailing slash if not present.
    if [[ "$dst" = "$HOME" ]]; then
        dst="$HOME/."
    else
        [[ "${dst}" != */ ]] && dst="${dst}/"
        [[ ! -d "${dst}" ]] && mkdir -p "${dst}"
    fi

    debug "list = $list"
    debug "dst = $dst"

    for item in $list; do
        local filename;
        filename=$(basename "$item")

        task "Copying $filename"

        if [[ ! -e "$dst$filename" ]]; then
            ln -sf "$DIR/$item" "$dst$filename"
            taskdone
        else
            taskdone "Already exists"
        fi
    done
}

while [[ -n $1 ]]; do
    case "$1" in
        -h|--help)
            help
            exit
        ;;
        -d|--desktop)
            INSTALL_DESKTOP="T"
        ;;
        -f|--files)
            INSTALL_FILES="T"
        ;;
        *)
            echo "Unknown option: $1"
            echo ""
            help >&2
            exit 1
        ;;
    esac
    shift
done

copy_to "$CORE_FILES" "$HOME"

if [[ "$INSTALL_FILES" = "T" ]]; then
    copy_to "$DEFAULT_FILES" "$HOME"
fi

copy_to "$DEFAULT_SCRIPTS" "$HOME/bin"

[[ "$INSTALL_DESKTOP" = "T" ]] && copy_to "$DESKTOP_FILES" "$HOME"
[[ "$INSTALL_DESKTOP" = "T" ]] && copy_to "$DESKTOP_CONFIG" "$HOME/.config"

# vim: ai et nu ts=4 sw=4 sts=4 ft=sh :
